<!DOCTYPE html>
<html lang="en">
    {% include "head.njk" %}
<body>
    <h1 style="size: 40px; font-weight:bold; ">Chatroom</h1>
    
    <button id="createRoom" onclick ="clickMe1()">Create Room</button>

    <button id="joinRoom" onclick ="clickMe2()">Join Room</button>

    <form action="/createRoom" method="post" id="form1" class="hide">

        <label for="user">Username</label>
        <input type="text" name="user" id="user_id"><br>

        <label for="input">Create Room Name</label>
        <input type="text" name="roomName" id="createInput">
        <input type="submit" value = "Submit">
    </form>

    <form action="/joinRoom" method="post" id="form2" class="hide">
        <label for="input">Enter Room Link</label>
        <input type="text" name="roomName" id="createInput">
        <input type="submit" value = "Submit">
    </form>

    <a id="chatRoomLink"></a>

    <script>
        var form1 = document.getElementById("form1");
        var form2 = document.getElementById("form2");
        function clickMe1() {
            if (form1.classList.contains("show")){
                document.getElementById("chatRoomLink").innerText = ""
            }
            form1.classList.toggle("hide");
            form1.classList.toggle("show");
        }
        function clickMe2() {
            form2.classList.toggle("hide");
                form2.classList.toggle("show");
            form2.onclick() = ()=>{
                
                if (form1.classList.contains("show")){
                document.getElementById("chatRoomLink").innerText = ""
            }
            }
            
        }

        // This form is to create a new chatroom
        form1.onsubmit = (e)=>{
            e.preventDefault()
            const formData = new FormData(e.target)
            const fomrProps = Object.fromEntries(formData)
            const roomRequested = fomrProps.roomName;
            const jsonString = JSON.stringify(fomrProps)
            
            /*
            // Fetch Request
            fetch("/createRoom", {
                method: 'POST', 
                headers: {
                    'Content-Type': 'application/json'
                },
                body: jsonString
            })
            .then(res => res.json())
            .then((data) =>{
                let link = document.getElementById("chatRoomLink")
                if(data.message === 'exsists'){
                    link.innerHTML = `Chatroom with name ${roomRequested} already exsists. Press to enter the chat room`;
                    link.setAttribute("href", `http://localhost:5000/chatroom/${data.roomName}`)
                }else{
                    link.innerHTML = "Press to enter the chat room"
                    link.setAttribute("href", `http://localhost:5000/chatroom/${data.roomName}`)
                }
            })
            */

            // Create XMLhttp request
            let request = new XMLHttpRequest();
            request.open("POST", "/createRoom")
            request.setRequestHeader('Content-Type', 'application/json')
            request.send(jsonString) 

            // receive message back from the server
            request.addEventListener("load", ()=>{
                let response = JSON.parse(request.responseText);
                let link = document.getElementById("chatRoomLink")

                // Brody code
                //if else to send room name to the server side when not available, and throw error if available in the database
                if(response.message === 'exsists'){
                    link.innerHTML = `Chatroom with name ${roomRequested} already exsists. Press to enter the chat room`;
                    link.setAttribute("href", `http://localhost:5000/chatroom/${response.roomName}`)
                    
                   
  
                }else{
                    link.innerHTML = "Press to enter the chat room"
                    link.setAttribute("href", `http://localhost:5000/chatroom/${response.roomName}`)

                    let myTimeOut = setTimeout(() => {
                        link.innerHTML = ``;
                        link.setAttribute("href", ``)

                        let object = {deleteChatroom : response.roomName}
                        let jsonString = JSON.stringify(object);

                        let request = new XMLHttpRequest();
                        request.open("POST", "/deleteChatroom")
                        request.setRequestHeader('Content-Type', 'application/json')
                        request.send(jsonString)
                    },5000)
                    link.onclick = () =>{
                        clearTimeout(myTimeOut)
                    }
                }
                
            })
        }

        // This form is to create a new chatroom, but we will work on this later
        form2.onsubmit = (e)=>{
            e.preventDefault()
            const formData = new FormData(e.target)
            const fomrProps = Object.fromEntries(formData)
            const jsonString = JSON.stringify(fomrProps)

            let request = new XMLHttpRequest();
            request.open("POST", "/joinRoom")
            request.setRequestHeader('Content-Type', 'application/json')
            request.send(jsonString)

            // receive message back from the server
            request.addEventListener("load", ()=>{
                let response = JSON.parse(request.responseText);
                let link = document.getElementById("chatRoomLink")

                // Brody code
                //if else to send room name to the server side when not available, and throw error if available in the database
                if(response.message === 'exsists'){
                    link.innerHTML = `Press to enter the chat room`;
                    link.setAttribute("href", `http://localhost:5000/chatroom/${response.roomName}`)
                }else{
                    link.innerHTML = "The chatroom doesn't exist"
                }
        })
    }
    </script>
</body>
{% include "footer.njk" %}
</html>

<style>
    .hide {
        display: none;
    }

    .show {
        display: block;
    }

    
</style>